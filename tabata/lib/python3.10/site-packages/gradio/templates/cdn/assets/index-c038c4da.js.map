{"version":3,"file":"index-c038c4da.js","sources":["../../../../js/icons/src/Brush.svelte","../../../../js/icons/src/Color.svelte","../../../../js/icons/src/Erase.svelte","../../../../js/icons/src/Sketch.svelte","../../../../js/image/shared/utils.ts","../../../../js/image/static/ImagePreview.svelte","../../../../js/image/static/StaticImage.svelte","../../../../js/image/interactive/Cropper.svelte","../../../../node_modules/.pnpm/lazy-brush@1.0.1/node_modules/lazy-brush/src/Point.js","../../../../node_modules/.pnpm/lazy-brush@1.0.1/node_modules/lazy-brush/src/LazyPoint.js","../../../../node_modules/.pnpm/lazy-brush@1.0.1/node_modules/lazy-brush/src/LazyBrush.js","../../../../js/image/interactive/Sketch.svelte","../../../../js/image/interactive/ModifySketch.svelte","../../../../js/image/interactive/SketchSettings.svelte","../../../../js/image/interactive/Image.svelte","../../../../js/image/interactive/InteractiveImage.svelte","../../../../js/image/index.svelte","../../../../js/app/src/components/Image/index.ts"],"sourcesContent":["<svg width=\"100%\" height=\"100%\" viewBox=\"0 0 32 32\">\n\t<path\n\t\td=\"M28.828 3.172a4.094 4.094 0 0 0-5.656 0L4.05 22.292A6.954 6.954 0 0 0 2 27.242V30h2.756a6.952 6.952 0 0 0 4.95-2.05L28.828 8.829a3.999 3.999 0 0 0 0-5.657zM10.91 18.26l2.829 2.829l-2.122 2.121l-2.828-2.828zm-2.619 8.276A4.966 4.966 0 0 1 4.756 28H4v-.759a4.967 4.967 0 0 1 1.464-3.535l1.91-1.91l2.829 2.828zM27.415 7.414l-12.261 12.26l-2.829-2.828l12.262-12.26a2.047 2.047 0 0 1 2.828 0a2 2 0 0 1 0 2.828z\"\n\t\tfill=\"currentColor\"\n\t/>\n\t<path\n\t\td=\"M6.5 15a3.5 3.5 0 0 1-2.475-5.974l3.5-3.5a1.502 1.502 0 0 0 0-2.121a1.537 1.537 0 0 0-2.121 0L3.415 5.394L2 3.98l1.99-1.988a3.585 3.585 0 0 1 4.95 0a3.504 3.504 0 0 1 0 4.949L5.439 10.44a1.502 1.502 0 0 0 0 2.121a1.537 1.537 0 0 0 2.122 0l4.024-4.024L13 9.95l-4.025 4.024A3.475 3.475 0 0 1 6.5 15z\"\n\t\tfill=\"currentColor\"\n\t/>\n</svg>\n","<svg width=\"100%\" height=\"100%\" viewBox=\"0 0 32 32\">\n\t<circle cx=\"10\" cy=\"12\" r=\"2\" fill=\"currentColor\" />\n\t<circle cx=\"16\" cy=\"9\" r=\"2\" fill=\"currentColor\" />\n\t<circle cx=\"22\" cy=\"12\" r=\"2\" fill=\"currentColor\" />\n\t<circle cx=\"23\" cy=\"18\" r=\"2\" fill=\"currentColor\" />\n\t<circle cx=\"19\" cy=\"23\" r=\"2\" fill=\"currentColor\" />\n\t<path\n\t\tfill=\"currentColor\"\n\t\td=\"M16.54 2A14 14 0 0 0 2 16a4.82 4.82 0 0 0 6.09 4.65l1.12-.31a3 3 0 0 1 3.79 2.9V27a3 3 0 0 0 3 3a14 14 0 0 0 14-14.54A14.05 14.05 0 0 0 16.54 2Zm8.11 22.31A11.93 11.93 0 0 1 16 28a1 1 0 0 1-1-1v-3.76a5 5 0 0 0-5-5a5.07 5.07 0 0 0-1.33.18l-1.12.31A2.82 2.82 0 0 1 4 16A12 12 0 0 1 16.47 4A12.18 12.18 0 0 1 28 15.53a11.89 11.89 0 0 1-3.35 8.79Z\"\n\t/>\n</svg>\n","<svg\n\txmlns=\"http://www.w3.org/2000/svg\"\n\twidth=\"100%\"\n\theight=\"100%\"\n\tviewBox=\"0 0 32 32\"\n\t><path\n\t\tfill=\"currentColor\"\n\t\td=\"M7 27h23v2H7zm20.38-16.49l-7.93-7.92a2 2 0 0 0-2.83 0l-14 14a2 2 0 0 0 0 2.83L7.13 24h9.59l10.66-10.66a2 2 0 0 0 0-2.83zM15.89 22H8l-4-4l6.31-6.31l7.93 7.92zm3.76-3.76l-7.92-7.93L18 4l8 7.93z\"\n\t/></svg\n>\n","<svg\n\txmlns=\"http://www.w3.org/2000/svg\"\n\twidth=\"100%\"\n\theight=\"100%\"\n\tviewBox=\"0 0 24 24\"\n\tfill=\"none\"\n\tstroke=\"currentColor\"\n\tstroke-width=\"1.5\"\n\tstroke-linecap=\"round\"\n\tstroke-linejoin=\"round\"\n\tclass=\"feather feather-edit-2\"\n>\n\t<path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\" />\n</svg>\n","export const get_coordinates_of_clicked_image = (\n\tevt: MouseEvent\n): [number, number] | null => {\n\tlet image = evt.currentTarget as HTMLImageElement;\n\n\tconst imageRect = image.getBoundingClientRect();\n\tconst xScale = image.naturalWidth / imageRect.width;\n\tconst yScale = image.naturalHeight / imageRect.height;\n\tif (xScale > yScale) {\n\t\tconst displayed_height = image.naturalHeight / xScale;\n\t\tconst y_offset = (imageRect.height - displayed_height) / 2;\n\t\tvar x = Math.round((evt.clientX - imageRect.left) * xScale);\n\t\tvar y = Math.round((evt.clientY - imageRect.top - y_offset) * xScale);\n\t} else {\n\t\tconst displayed_width = image.naturalWidth / yScale;\n\t\tconst x_offset = (imageRect.width - displayed_width) / 2;\n\t\tvar x = Math.round((evt.clientX - imageRect.left - x_offset) * yScale);\n\t\tvar y = Math.round((evt.clientY - imageRect.top) * yScale);\n\t}\n\tif (x < 0 || x >= image.naturalWidth || y < 0 || y >= image.naturalHeight) {\n\t\treturn null;\n\t}\n\treturn [x, y];\n};\n","<script lang=\"ts\">\n\timport { createEventDispatcher } from \"svelte\";\n\timport type { SelectData } from \"@gradio/utils\";\n\timport { uploadToHuggingFace } from \"@gradio/utils\";\n\timport { BlockLabel, Empty, IconButton, ShareButton } from \"@gradio/atoms\";\n\timport { Download } from \"@gradio/icons\";\n\timport { get_coordinates_of_clicked_image } from \"../shared/utils\";\n\n\timport { Image } from \"@gradio/icons\";\n\n\texport let value: null | string;\n\texport let label: string | undefined = undefined;\n\texport let show_label: boolean;\n\texport let show_download_button = true;\n\texport let selectable = false;\n\texport let show_share_button = false;\n\n\tconst dispatch = createEventDispatcher<{\n\t\tchange: string;\n\t\tselect: SelectData;\n\t}>();\n\n\t$: value && dispatch(\"change\", value);\n\n\tconst handle_click = (evt: MouseEvent): void => {\n\t\tlet coordinates = get_coordinates_of_clicked_image(evt);\n\t\tif (coordinates) {\n\t\t\tdispatch(\"select\", { index: coordinates, value: null });\n\t\t}\n\t};\n</script>\n\n<BlockLabel {show_label} Icon={Image} label={label || \"Image\"} />\n{#if value === null}\n\t<Empty unpadded_box={true} size=\"large\"><Image /></Empty>\n{:else}\n\t<div class=\"icon-buttons\">\n\t\t{#if show_download_button}\n\t\t\t<a\n\t\t\t\thref={value}\n\t\t\t\ttarget={window.__is_colab__ ? \"_blank\" : null}\n\t\t\t\tdownload={\"image\"}\n\t\t\t>\n\t\t\t\t<IconButton Icon={Download} label=\"Download\" />\n\t\t\t</a>\n\t\t{/if}\n\t\t{#if show_share_button}\n\t\t\t<ShareButton\n\t\t\t\ton:share\n\t\t\t\ton:error\n\t\t\t\tformatter={async (value) => {\n\t\t\t\t\tif (!value) return \"\";\n\t\t\t\t\tlet url = await uploadToHuggingFace(value, \"base64\");\n\t\t\t\t\treturn `<img src=\"${url}\" />`;\n\t\t\t\t}}\n\t\t\t\t{value}\n\t\t\t/>\n\t\t{/if}\n\t</div>\n\t<!-- TODO: fix -->\n\t<!-- svelte-ignore a11y-click-events-have-key-events -->\n\t<!-- svelte-ignore a11y-no-noninteractive-element-interactions-->\n\t<img src={value} alt=\"\" class:selectable on:click={handle_click} />\n{/if}\n\n<style>\n\timg {\n\t\twidth: var(--size-full);\n\t\theight: var(--size-full);\n\t\tobject-fit: contain;\n\t}\n\n\t.selectable {\n\t\tcursor: crosshair;\n\t}\n\n\t.icon-buttons {\n\t\tdisplay: flex;\n\t\tposition: absolute;\n\t\ttop: 6px;\n\t\tright: 6px;\n\t\tgap: var(--size-1);\n\t}\n</style>\n","<svelte:options accessors={true} />\n\n<script lang=\"ts\">\n\timport { createEventDispatcher } from \"svelte\";\n\timport StaticImage from \"./ImagePreview.svelte\";\n\n\timport { Block } from \"@gradio/atoms\";\n\timport { _ } from \"svelte-i18n\";\n\timport { StatusTracker } from \"@gradio/statustracker\";\n\timport type { LoadingStatus } from \"@gradio/statustracker/types\";\n\n\texport let elem_id = \"\";\n\texport let elem_classes: string[] = [];\n\texport let visible = true;\n\texport let value: null | string = null;\n\texport let label: string;\n\texport let show_label: boolean;\n\texport let show_download_button: boolean;\n\n\texport let height: number | undefined;\n\texport let width: number | undefined;\n\n\texport let selectable = false;\n\texport let container = true;\n\texport let scale: number | null = null;\n\texport let min_width: number | undefined = undefined;\n\texport let loading_status: LoadingStatus;\n\texport let show_share_button = false;\n\n\tconst dispatch = createEventDispatcher<{\n\t\tchange: undefined;\n\t\terror: string;\n\t}>();\n\n\t$: value, dispatch(\"change\");\n\tlet dragging: boolean;\n\n\t$: value = !value ? null : value;\n</script>\n\n<Block\n\t{visible}\n\tvariant={\"solid\"}\n\tborder_mode={dragging ? \"focus\" : \"base\"}\n\tpadding={false}\n\t{elem_id}\n\t{elem_classes}\n\theight={height || undefined}\n\t{width}\n\tallow_overflow={false}\n\t{container}\n\t{scale}\n\t{min_width}\n>\n\t<StatusTracker {...loading_status} />\n\t<StaticImage\n\t\ton:select\n\t\ton:share\n\t\ton:error\n\t\t{value}\n\t\t{label}\n\t\t{show_label}\n\t\t{show_download_button}\n\t\t{selectable}\n\t\t{show_share_button}\n\t/>\n</Block>\n","<svelte:options accessors={true} />\n\n<script lang=\"ts\">\n\timport Cropper from \"cropperjs\";\n\timport { onMount, createEventDispatcher } from \"svelte\";\n\n\texport let image: string;\n\tlet el: HTMLImageElement;\n\n\tconst dispatch = createEventDispatcher();\n\tlet cropper: Cropper;\n\n\texport function destroy(): void {\n\t\tcropper.destroy();\n\t}\n\n\texport function create(): void {\n\t\tif (cropper) {\n\t\t\tdestroy();\n\t\t}\n\t\tcropper = new Cropper(el, {\n\t\t\tautoCropArea: 1,\n\t\t\tcropend(): void {\n\t\t\t\tconst image_data = cropper.getCroppedCanvas().toDataURL();\n\t\t\t\tdispatch(\"crop\", image_data);\n\t\t\t}\n\t\t});\n\n\t\tdispatch(\"crop\", image);\n\t}\n</script>\n\n<img src={image} bind:this={el} alt=\"\" />\n","class Point {\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   */\n  constructor(x, y) {\n    this.x = x\n    this.y = y\n  }\n}\n\nexport default Point\n","import Point from './Point'\n\nclass LazyPoint extends Point {\n  /**\n   * Update the x and y values\n   *\n   * @param {Point} point\n   */\n  update (point) {\n    this.x = point.x\n    this.y = point.y\n  }\n\n  /**\n   * Move the point to another position using an angle and distance\n   *\n   * @param {number} angle The angle in radians\n   * @param {number} distance How much the point should be moved\n   */\n  moveByAngle (angle, distance) {\n    // Rotate the angle based on the browser coordinate system ([0,0] in the top left)\n    const angleRotated = angle + (Math.PI / 2)\n\n    this.x = this.x + (Math.sin(angleRotated) * distance),\n    this.y = this.y - (Math.cos(angleRotated) * distance)\n  }\n\n  /**\n   * Check if this point is the same as another point\n   *\n   * @param {Point} point\n   * @returns {boolean}\n   */\n  equalsTo (point) {\n    return this.x === point.x && this.y === point.y\n  }\n\n  /**\n   * Get the difference for x and y axis to another point\n   *\n   * @param {Point} point\n   * @returns {Point}\n   */\n  getDifferenceTo (point) {\n    return new Point(this.x - point.x, this.y - point.y)\n  }\n\n  /**\n   * Calculate distance to another point\n   *\n   * @param {Point} point\n   * @returns {Point}\n   */\n  getDistanceTo (point) {\n    const diff = this.getDifferenceTo(point)\n\n    return Math.sqrt(Math.pow(diff.x, 2) + Math.pow(diff.y, 2))\n  }\n\n  /**\n   * Calculate the angle to another point\n   *\n   * @param {Point} point\n   * @returns {Point}\n   */\n  getAngleTo (point) {\n    const diff = this.getDifferenceTo(point)\n\n    return Math.atan2(diff.y, diff.x)\n  }\n\n  /**\n   * Return a simple object with x and y properties\n   *\n   * @returns {object}\n   */\n  toObject () {\n    return {\n      x: this.x,\n      y: this.y\n    }\n  }\n}\n\nexport default LazyPoint\n","import LazyPoint from './LazyPoint'\nconst RADIUS_DEFAULT = 30\n\nclass LazyBrush {\n  /**\n   * constructor\n   *\n   * @param {object} settings\n   * @param {number} settings.radius The radius for the lazy area\n   * @param {boolean} settings.enabled\n   */\n  constructor ({ radius = RADIUS_DEFAULT, enabled = true, initialPoint = { x: 0, y: 0 }} = {}) {\n    this.radius = radius\n    this._isEnabled = enabled\n\n    this.pointer = new LazyPoint(initialPoint.x, initialPoint.y)\n    this.brush = new LazyPoint(initialPoint.x, initialPoint.y)\n\n    this.angle = 0\n    this.distance = 0\n    this._hasMoved = false\n  }\n\n  /**\n   * Enable lazy brush calculations.\n   *\n   */\n  enable () {\n    this._isEnabled = true\n  }\n\n  /**\n   * Disable lazy brush calculations.\n   *\n   */\n  disable () {\n    this._isEnabled = false\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  isEnabled () {\n    return this._isEnabled\n  }\n\n  /**\n   * Update the radius\n   *\n   * @param {number} radius\n   */\n  setRadius (radius) {\n    this.radius = radius\n  }\n\n  /**\n   * Return the current radius\n   *\n   * @returns {number}\n   */\n  getRadius () {\n    return this.radius\n  }\n\n  /**\n   * Return the brush coordinates as a simple object\n   *\n   * @returns {object}\n   */\n  getBrushCoordinates () {\n    return this.brush.toObject()\n  }\n\n  /**\n   * Return the pointer coordinates as a simple object\n   *\n   * @returns {object}\n   */\n  getPointerCoordinates () {\n    return this.pointer.toObject()\n  }\n\n  /**\n   * Return the brush as a LazyPoint\n   *\n   * @returns {LazyPoint}\n   */\n  getBrush () {\n    return this.brush\n  }\n\n  /**\n   * Return the pointer as a LazyPoint\n   *\n   * @returns {LazyPoint}\n   */\n  getPointer () {\n    return this.pointer\n  }\n\n  /**\n   * Return the angle between pointer and brush\n   *\n   * @returns {number} Angle in radians\n   */\n  getAngle () {\n    return this.angle\n  }\n\n  /**\n   * Return the distance between pointer and brush\n   *\n   * @returns {number} Distance in pixels\n   */\n  getDistance () {\n    return this.distance\n  }\n\n  /**\n   * Return if the previous update has moved the brush.\n   *\n   * @returns {boolean} Whether the brush moved previously.\n   */\n  brushHasMoved () {\n    return this._hasMoved\n  }\n\n  /**\n   * Updates the pointer point and calculates the new brush point.\n   *\n   * @param {Point} newPointerPoint\n   * @param {Object} options\n   * @param {Boolean} options.both Force update pointer and brush\n   * @returns {Boolean} Whether any of the two points changed\n   */\n  update (newPointerPoint, { both = false } = {}) {\n    this._hasMoved = false\n    if (this.pointer.equalsTo(newPointerPoint) && !both) {\n      return false\n    }\n\n    this.pointer.update(newPointerPoint)\n\n    if (both) {\n      this._hasMoved = true\n      this.brush.update(newPointerPoint)\n      return true\n    }\n\n    if (this._isEnabled) {\n      this.distance = this.pointer.getDistanceTo(this.brush)\n      this.angle = this.pointer.getAngleTo(this.brush)\n\n      if (this.distance > this.radius) {\n        this.brush.moveByAngle(this.angle, this.distance - this.radius)\n        this._hasMoved = true\n      }\n    } else {\n      this.distance = 0\n      this.angle = 0\n      this.brush.update(newPointerPoint)\n      this._hasMoved = true\n    }\n\n    return true\n  }\n}\n\nexport default LazyBrush\n\n","<script>\n\t// @ts-nocheck\n\t/* eslint-disable */\n\n\timport { onMount, onDestroy, createEventDispatcher, tick } from \"svelte\";\n\timport { fade } from \"svelte/transition\";\n\timport { LazyBrush } from \"lazy-brush/src\";\n\timport ResizeObserver from \"resize-observer-polyfill\";\n\n\tconst dispatch = createEventDispatcher();\n\n\texport let value;\n\texport let value_img;\n\texport let mode = \"sketch\";\n\texport let brush_color = \"#0b0f19\";\n\texport let brush_radius;\n\texport let mask_opacity = 0.7;\n\texport let source;\n\n\texport let width = 400;\n\texport let height = 200;\n\texport let container_height = 200;\n\texport let shape;\n\n\t$: {\n\t\tif (shape && (width || height)) {\n\t\t\twidth = shape[0];\n\t\t\theight = shape[1];\n\t\t}\n\t}\n\n\tlet mounted;\n\n\tlet catenary_color = \"#aaa\";\n\n\tlet canvas_width = width;\n\tlet canvas_height = height;\n\n\t$: mounted && !value && clear();\n\n\tlet last_value_img;\n\n\t$: {\n\t\tif (mounted && value_img !== last_value_img) {\n\t\t\tlast_value_img = value_img;\n\n\t\t\tclear();\n\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (source === \"webcam\") {\n\t\t\t\t\tctx.temp.save();\n\t\t\t\t\tctx.temp.translate(width, 0);\n\t\t\t\t\tctx.temp.scale(-1, 1);\n\t\t\t\t\tctx.temp.drawImage(value_img, 0, 0);\n\t\t\t\t\tctx.temp.restore();\n\t\t\t\t} else {\n\t\t\t\t\tdraw_cropped_image();\n\t\t\t\t}\n\n\t\t\t\tctx.drawing.drawImage(canvas.temp, 0, 0, width, height);\n\n\t\t\t\tdraw_lines({ lines: lines.slice() });\n\t\t\t\ttrigger_on_change();\n\t\t\t}, 50);\n\t\t}\n\t}\n\n\tfunction mid_point(p1, p2) {\n\t\treturn {\n\t\t\tx: p1.x + (p2.x - p1.x) / 2,\n\t\t\ty: p1.y + (p2.y - p1.y) / 2\n\t\t};\n\t}\n\n\tconst canvas_types = [\n\t\t{\n\t\t\tname: \"interface\",\n\t\t\tzIndex: 15\n\t\t},\n\t\t{\n\t\t\tname: \"mask\",\n\t\t\tzIndex: 13,\n\t\t\topacity: mask_opacity\n\t\t},\n\t\t{\n\t\t\tname: \"drawing\",\n\t\t\tzIndex: 11\n\t\t},\n\t\t{\n\t\t\tname: \"temp\",\n\t\t\tzIndex: 12\n\t\t}\n\t];\n\n\tlet canvas = {};\n\tlet ctx = {};\n\tlet points = [];\n\tlet lines = [];\n\tlet mouse_has_moved = true;\n\tlet values_changed = true;\n\tlet is_drawing = false;\n\tlet is_pressing = false;\n\tlet lazy = null;\n\tlet canvas_container = null;\n\tlet canvas_observer = null;\n\tlet line_count = 0;\n\n\tfunction draw_cropped_image() {\n\t\tif (!shape) {\n\t\t\tctx.temp.drawImage(value_img, 0, 0, width, height);\n\t\t\treturn;\n\t\t}\n\n\t\tlet _width = value_img.naturalWidth;\n\t\tlet _height = value_img.naturalHeight;\n\n\t\tconst shape_ratio = shape[0] / shape[1];\n\t\tconst image_ratio = _width / _height;\n\n\t\tlet x = 0;\n\t\tlet y = 0;\n\n\t\tif (shape_ratio < image_ratio) {\n\t\t\t_width = shape[1] * image_ratio;\n\t\t\t_height = shape[1];\n\t\t\tx = (shape[0] - _width) / 2;\n\t\t} else if (shape_ratio > image_ratio) {\n\t\t\t_width = shape[0];\n\t\t\t_height = shape[0] / image_ratio;\n\t\t\ty = (shape[1] - _height) / 2;\n\t\t} else {\n\t\t\tx = 0;\n\t\t\ty = 0;\n\t\t\t_width = shape[0];\n\t\t\t_height = shape[1];\n\t\t}\n\n\t\tctx.temp.drawImage(value_img, x, y, _width, _height);\n\t}\n\n\tonMount(async () => {\n\t\tObject.keys(canvas).forEach((key) => {\n\t\t\tctx[key] = canvas[key].getContext(\"2d\");\n\t\t});\n\n\t\tawait tick();\n\n\t\tif (value_img) {\n\t\t\tvalue_img.addEventListener(\"load\", (_) => {\n\t\t\t\tif (source === \"webcam\") {\n\t\t\t\t\tctx.temp.save();\n\t\t\t\t\tctx.temp.translate(width, 0);\n\t\t\t\t\tctx.temp.scale(-1, 1);\n\t\t\t\t\tctx.temp.drawImage(value_img, 0, 0);\n\t\t\t\t\tctx.temp.restore();\n\t\t\t\t} else {\n\t\t\t\t\tdraw_cropped_image();\n\t\t\t\t}\n\t\t\t\tctx.drawing.drawImage(canvas.temp, 0, 0, width, height);\n\n\t\t\t\ttrigger_on_change();\n\t\t\t});\n\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (source === \"webcam\") {\n\t\t\t\t\tctx.temp.save();\n\t\t\t\t\tctx.temp.translate(width, 0);\n\t\t\t\t\tctx.temp.scale(-1, 1);\n\t\t\t\t\tctx.temp.drawImage(value_img, 0, 0);\n\t\t\t\t\tctx.temp.restore();\n\t\t\t\t} else {\n\t\t\t\t\tdraw_cropped_image();\n\t\t\t\t}\n\n\t\t\t\tctx.drawing.drawImage(canvas.temp, 0, 0, width, height);\n\n\t\t\t\tdraw_lines({ lines: lines.slice() });\n\t\t\t\ttrigger_on_change();\n\t\t\t}, 100);\n\t\t}\n\n\t\tlazy = new LazyBrush({\n\t\t\tradius: brush_radius * 0.05,\n\t\t\tenabled: true,\n\t\t\tinitialPoint: {\n\t\t\t\tx: width / 2,\n\t\t\t\ty: height / 2\n\t\t\t}\n\t\t});\n\n\t\tcanvas_observer = new ResizeObserver((entries, observer, ...rest) => {\n\t\t\thandle_canvas_resize(entries, observer);\n\t\t});\n\t\tcanvas_observer.observe(canvas_container);\n\n\t\tloop();\n\t\tmounted = true;\n\n\t\trequestAnimationFrame(() => {\n\t\t\tinit();\n\t\t\trequestAnimationFrame(() => {\n\t\t\t\tclear();\n\t\t\t});\n\t\t});\n\t});\n\n\tfunction init() {\n\t\tconst initX = width / 2;\n\t\tconst initY = height / 2;\n\t\tlazy.update({ x: initX, y: initY }, { both: true });\n\t\tlazy.update({ x: initX, y: initY }, { both: false });\n\t\tmouse_has_moved = true;\n\t\tvalues_changed = true;\n\t}\n\n\tonDestroy(() => {\n\t\tmounted = false;\n\t\tcanvas_observer.unobserve(canvas_container);\n\t});\n\n\tfunction redraw_image(_lines) {\n\t\tclear_canvas();\n\n\t\tif (value_img) {\n\t\t\tif (source === \"webcam\") {\n\t\t\t\tctx.temp.save();\n\t\t\t\tctx.temp.translate(width, 0);\n\t\t\t\tctx.temp.scale(-1, 1);\n\t\t\t\tctx.temp.drawImage(value_img, 0, 0);\n\t\t\t\tctx.temp.restore();\n\t\t\t} else {\n\t\t\t\tdraw_cropped_image();\n\t\t\t}\n\n\t\t\tif (!lines || !lines.length) {\n\t\t\t\tctx.drawing.drawImage(canvas.temp, 0, 0, width, height);\n\t\t\t}\n\t\t}\n\n\t\tdraw_lines({ lines: _lines });\n\t\tline_count = _lines.length;\n\n\t\tlines = _lines;\n\t\tctx.drawing.drawImage(canvas.temp, 0, 0, width, height);\n\n\t\tif (lines.length == 0) {\n\t\t\tdispatch(\"clear\");\n\t\t}\n\t}\n\n\texport function clear_mask() {\n\t\tconst _lines = [];\n\n\t\tredraw_image(_lines);\n\t\ttrigger_on_change();\n\t}\n\n\texport function undo() {\n\t\tconst _lines = lines.slice(0, -1);\n\n\t\tredraw_image(_lines);\n\t\ttrigger_on_change();\n\t}\n\n\tlet get_save_data = () => {\n\t\treturn JSON.stringify({\n\t\t\tlines: lines,\n\t\t\twidth: canvas_width,\n\t\t\theight: canvas_height\n\t\t});\n\t};\n\n\tlet draw_lines = ({ lines }) => {\n\t\tlines.forEach((line) => {\n\t\t\tconst { points: _points, brush_color, brush_radius } = line;\n\t\t\tdraw_points({\n\t\t\t\tpoints: _points,\n\t\t\t\tbrush_color,\n\t\t\t\tbrush_radius,\n\t\t\t\tmask: mode === \"mask\"\n\t\t\t});\n\t\t});\n\n\t\tsaveLine({ brush_color, brush_radius });\n\t\tif (mode === \"mask\") {\n\t\t\tsave_mask_line();\n\t\t}\n\t};\n\n\tlet handle_draw_start = (e) => {\n\t\te.preventDefault();\n\t\tis_pressing = true;\n\t\tconst { x, y } = get_pointer_pos(e);\n\t\tif (e.touches && e.touches.length > 0) {\n\t\t\tlazy.update({ x, y }, { both: true });\n\t\t}\n\t\thandle_pointer_move(x, y);\n\t\tline_count += 1;\n\t};\n\n\tlet handle_draw_move = (e) => {\n\t\te.preventDefault();\n\t\tconst { x, y } = get_pointer_pos(e);\n\t\thandle_pointer_move(x, y);\n\t};\n\n\tlet handle_draw_end = (e) => {\n\t\te.preventDefault();\n\t\thandle_draw_move(e);\n\t\tis_drawing = false;\n\t\tis_pressing = false;\n\t\tsaveLine();\n\n\t\tif (mode === \"mask\") {\n\t\t\tsave_mask_line();\n\t\t}\n\t};\n\n\tlet old_width = 0;\n\tlet old_height = 0;\n\tlet old_container_height = 0;\n\tlet add_lr_border = false;\n\n\tlet handle_canvas_resize = async () => {\n\t\tif (shape && canvas_container) {\n\t\t\tconst x = canvas_container?.getBoundingClientRect();\n\t\t\tconst shape_ratio = shape[0] / shape[1];\n\t\t\tconst container_ratio = x.width / x.height;\n\t\t\tadd_lr_border = shape_ratio < container_ratio;\n\t\t}\n\n\t\tif (\n\t\t\twidth === old_width &&\n\t\t\theight === old_height &&\n\t\t\told_container_height === container_height\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\tconst dimensions = { width: width, height: height };\n\n\t\tconst container_dimensions = {\n\t\t\theight: container_height,\n\t\t\twidth: container_height * (dimensions.width / dimensions.height)\n\t\t};\n\n\t\tawait Promise.all([\n\t\t\tset_canvas_size(canvas.interface, dimensions, container_dimensions),\n\t\t\tset_canvas_size(canvas.drawing, dimensions, container_dimensions),\n\t\t\tset_canvas_size(canvas.temp, dimensions, container_dimensions),\n\t\t\tset_canvas_size(canvas.mask, dimensions, container_dimensions, false)\n\t\t]);\n\n\t\tif (!brush_radius) {\n\t\t\tbrush_radius = 20 * (dimensions.width / container_dimensions.width);\n\t\t}\n\n\t\tloop({ once: true });\n\n\t\tsetTimeout(() => {\n\t\t\told_height = height;\n\t\t\told_width = width;\n\t\t\told_container_height = container_height;\n\t\t}, 10);\n\t\tawait tick();\n\n\t\tclear();\n\t};\n\n\t$: {\n\t\tif (lazy) {\n\t\t\tinit();\n\t\t\tlazy.setRadius(brush_radius * 0.05);\n\t\t}\n\t}\n\n\t$: {\n\t\tif (width || height) {\n\t\t\thandle_canvas_resize();\n\t\t}\n\t}\n\n\tlet set_canvas_size = async (canvas, dimensions, container, scale = true) => {\n\t\tif (!mounted) return;\n\t\tawait tick();\n\n\t\tconst dpr = window.devicePixelRatio || 1;\n\t\tcanvas.width = dimensions.width * (scale ? dpr : 1);\n\t\tcanvas.height = dimensions.height * (scale ? dpr : 1);\n\n\t\tconst ctx = canvas.getContext(\"2d\");\n\t\tscale && ctx.scale(dpr, dpr);\n\n\t\tcanvas.style.width = `${container.width}px`;\n\t\tcanvas.style.height = `${container.height}px`;\n\t};\n\n\tlet get_pointer_pos = (e) => {\n\t\tconst rect = canvas.interface.getBoundingClientRect();\n\n\t\tlet clientX = e.clientX;\n\t\tlet clientY = e.clientY;\n\t\tif (e.changedTouches && e.changedTouches.length > 0) {\n\t\t\tclientX = e.changedTouches[0].clientX;\n\t\t\tclientY = e.changedTouches[0].clientY;\n\t\t}\n\n\t\treturn {\n\t\t\tx: ((clientX - rect.left) / rect.width) * width,\n\t\t\ty: ((clientY - rect.top) / rect.height) * height\n\t\t};\n\t};\n\n\tlet handle_pointer_move = (x, y) => {\n\t\tlazy.update({ x: x, y: y });\n\t\tconst is_disabled = !lazy.isEnabled();\n\t\tif ((is_pressing && !is_drawing) || (is_disabled && is_pressing)) {\n\t\t\tis_drawing = true;\n\t\t\tpoints.push(lazy.brush.toObject());\n\t\t}\n\t\tif (is_drawing) {\n\t\t\tpoints.push(lazy.brush.toObject());\n\t\t\tdraw_points({\n\t\t\t\tpoints: points,\n\t\t\t\tbrush_color,\n\t\t\t\tbrush_radius,\n\t\t\t\tmask: mode === \"mask\"\n\t\t\t});\n\t\t}\n\t\tmouse_has_moved = true;\n\t};\n\n\tlet draw_points = ({ points, brush_color, brush_radius, mask }) => {\n\t\tif (!points || points.length < 2) return;\n\t\tlet target_ctx = mask ? ctx.mask : ctx.temp;\n\t\ttarget_ctx.lineJoin = \"round\";\n\t\ttarget_ctx.lineCap = \"round\";\n\n\t\ttarget_ctx.strokeStyle = brush_color;\n\t\ttarget_ctx.lineWidth = brush_radius;\n\t\tlet p1 = points[0];\n\t\tlet p2 = points[1];\n\t\ttarget_ctx.moveTo(p2.x, p2.y);\n\t\ttarget_ctx.beginPath();\n\t\tfor (var i = 1, len = points.length; i < len; i++) {\n\t\t\tvar midPoint = mid_point(p1, p2);\n\t\t\ttarget_ctx.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n\t\t\tp1 = points[i];\n\t\t\tp2 = points[i + 1];\n\t\t}\n\n\t\ttarget_ctx.lineTo(p1.x, p1.y);\n\t\ttarget_ctx.stroke();\n\t};\n\n\tlet save_mask_line = () => {\n\t\tif (points.length < 1) return;\n\t\tpoints.length = 0;\n\n\t\ttrigger_on_change();\n\t};\n\n\tlet saveLine = () => {\n\t\tif (points.length < 1) return;\n\n\t\tlines.push({\n\t\t\tpoints: points.slice(),\n\t\t\tbrush_color: brush_color,\n\t\t\tbrush_radius\n\t\t});\n\n\t\tif (mode !== \"mask\") {\n\t\t\tpoints.length = 0;\n\t\t}\n\n\t\tctx.drawing.drawImage(canvas.temp, 0, 0, width, height);\n\n\t\ttrigger_on_change();\n\t};\n\n\tlet trigger_on_change = () => {\n\t\tconst x = get_image_data();\n\t\tdispatch(\"change\", x);\n\t};\n\n\texport function clear() {\n\t\tlines = [];\n\t\tclear_canvas();\n\t\tline_count = 0;\n\n\t\treturn true;\n\t}\n\n\tfunction clear_canvas() {\n\t\tvalues_changed = true;\n\t\tctx.temp.clearRect(0, 0, width, height);\n\n\t\tctx.temp.fillStyle = mode === \"mask\" ? \"transparent\" : \"#FFFFFF\";\n\t\tctx.temp.fillRect(0, 0, width, height);\n\n\t\tif (mode === \"mask\") {\n\t\t\tctx.mask.clearRect(0, 0, canvas.mask.width, canvas.mask.height);\n\t\t}\n\t}\n\n\tlet loop = ({ once = false } = {}) => {\n\t\tif (mouse_has_moved || values_changed) {\n\t\t\tconst pointer = lazy.getPointerCoordinates();\n\t\t\tconst brush = lazy.getBrushCoordinates();\n\t\t\tdraw_interface(ctx.interface, pointer, brush);\n\t\t\tmouse_has_moved = false;\n\t\t\tvalues_changed = false;\n\t\t}\n\t\tif (!once) {\n\t\t\twindow.requestAnimationFrame(() => {\n\t\t\t\tloop();\n\t\t\t});\n\t\t}\n\t};\n\n\t$: brush_dot = brush_radius * 0.075;\n\n\tlet draw_interface = (ctx, pointer, brush) => {\n\t\tctx.clearRect(0, 0, width, height);\n\n\t\t// brush preview\n\t\tctx.beginPath();\n\t\tctx.fillStyle = brush_color;\n\t\tctx.arc(brush.x, brush.y, brush_radius / 2, 0, Math.PI * 2, true);\n\t\tctx.fill();\n\n\t\t// tiny brush point dot\n\t\tctx.beginPath();\n\t\tctx.fillStyle = catenary_color;\n\t\tctx.arc(brush.x, brush.y, brush_dot, 0, Math.PI * 2, true);\n\t\tctx.fill();\n\t};\n\n\texport function get_image_data() {\n\t\treturn mode === \"mask\"\n\t\t\t? canvas.mask.toDataURL(\"image/png\")\n\t\t\t: canvas.drawing.toDataURL(\"image/jpg\");\n\t}\n</script>\n\n<div\n\tclass=\"wrap\"\n\tbind:this={canvas_container}\n\tbind:offsetWidth={canvas_width}\n\tbind:offsetHeight={canvas_height}\n>\n\t{#if line_count === 0}\n\t\t<div transition:fade={{ duration: 50 }} class=\"start-prompt\">\n\t\t\tStart drawing\n\t\t</div>\n\t{/if}\n\t{#each canvas_types as { name, zIndex, opacity }}\n\t\t<canvas\n\t\t\tkey={name}\n\t\t\tstyle=\" z-index:{zIndex};\"\n\t\t\tstyle:opacity\n\t\t\tclass:lr={add_lr_border}\n\t\t\tclass:tb={!add_lr_border}\n\t\t\tbind:this={canvas[name]}\n\t\t\ton:mousedown={name === \"interface\" ? handle_draw_start : undefined}\n\t\t\ton:mousemove={name === \"interface\" ? handle_draw_move : undefined}\n\t\t\ton:mouseup={name === \"interface\" ? handle_draw_end : undefined}\n\t\t\ton:mouseout={name === \"interface\" ? handle_draw_end : undefined}\n\t\t\ton:blur={name === \"interface\" ? handle_draw_end : undefined}\n\t\t\ton:touchstart={name === \"interface\" ? handle_draw_start : undefined}\n\t\t\ton:touchmove={name === \"interface\" ? handle_draw_move : undefined}\n\t\t\ton:touchend={name === \"interface\" ? handle_draw_end : undefined}\n\t\t\ton:touchcancel={name === \"interface\" ? handle_draw_end : undefined}\n\t\t\ton:click|stopPropagation\n\t\t/>\n\t{/each}\n</div>\n\n<style>\n\tcanvas {\n\t\tdisplay: block;\n\t\tposition: absolute;\n\t\ttop: 0px;\n\t\tright: 0px;\n\t\tbottom: 0px;\n\t\tleft: 0px;\n\t\tmargin: auto;\n\t}\n\n\t.lr {\n\t\tborder-right: 1px solid var(--border-color-primary);\n\t\tborder-left: 1px solid var(--border-color-primary);\n\t}\n\n\t.tb {\n\t\tborder-top: 1px solid var(--border-color-primary);\n\t\tborder-bottom: 1px solid var(--border-color-primary);\n\t}\n\n\tcanvas:hover {\n\t\tcursor: none;\n\t}\n\n\t.wrap {\n\t\tposition: relative;\n\t\twidth: var(--size-full);\n\t\theight: var(--size-full);\n\t\ttouch-action: none;\n\t}\n\n\t.start-prompt {\n\t\tdisplay: flex;\n\t\tposition: absolute;\n\t\ttop: 0px;\n\t\tright: 0px;\n\t\tbottom: 0px;\n\t\tleft: 0px;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\tz-index: var(--layer-4);\n\t\ttouch-action: none;\n\t\tpointer-events: none;\n\t\tcolor: var(--body-text-color-subdued);\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { createEventDispatcher } from \"svelte\";\n\timport { IconButton } from \"@gradio/atoms\";\n\timport { Undo, Clear, Erase } from \"@gradio/icons\";\n\n\tconst dispatch = createEventDispatcher();\n\n\texport let show_eraser = false;\n</script>\n\n<div>\n\t<IconButton Icon={Undo} label=\"Undo\" on:click={() => dispatch(\"undo\")} />\n\n\t{#if show_eraser}\n\t\t<IconButton\n\t\t\tIcon={Erase}\n\t\t\tlabel=\"Clear\"\n\t\t\ton:click={(event) => {\n\t\t\t\tdispatch(\"clear_mask\");\n\t\t\t\tevent.stopPropagation();\n\t\t\t}}\n\t\t/>\n\t{/if}\n\n\t<IconButton\n\t\tIcon={Clear}\n\t\tlabel=\"Remove Image\"\n\t\ton:click={(event) => {\n\t\t\tdispatch(\"remove_image\");\n\t\t\tevent.stopPropagation();\n\t\t}}\n\t/>\n</div>\n\n<style>\n\tdiv {\n\t\tdisplay: flex;\n\t\tposition: absolute;\n\t\ttop: var(--size-2);\n\t\tright: var(--size-2);\n\t\tjustify-content: flex-end;\n\t\tgap: var(--spacing-sm);\n\t\tz-index: var(--layer-5);\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { IconButton } from \"@gradio/atoms\";\n\timport { Brush, Color } from \"@gradio/icons\";\n\n\tlet show_size = false;\n\tlet show_col = false;\n\n\texport let brush_radius = 20;\n\texport let brush_color = \"#000\";\n\texport let container_height: number;\n\texport let img_width: number;\n\texport let img_height: number;\n\texport let mode: \"mask\" | \"other\" = \"other\";\n\n\t$: width = container_height * (img_width / img_height);\n</script>\n\n<div class=\"wrap\">\n\t<span class=\"brush\">\n\t\t<IconButton\n\t\t\tIcon={Brush}\n\t\t\tlabel=\"Use brush\"\n\t\t\ton:click={() => (show_size = !show_size)}\n\t\t/>\n\t\t{#if show_size}\n\t\t\t<input\n\t\t\t\taria-label=\"Brush radius\"\n\t\t\t\tbind:value={brush_radius}\n\t\t\t\ttype=\"range\"\n\t\t\t\tmin={0.5 * (img_width / width)}\n\t\t\t\tmax={75 * (img_width / width)}\n\t\t\t/>\n\t\t{/if}\n\t</span>\n\n\t{#if mode !== \"mask\"}\n\t\t<span class=\"col\">\n\t\t\t<IconButton\n\t\t\t\tIcon={Color}\n\t\t\t\tlabel=\"Select brush color\"\n\t\t\t\ton:click={() => (show_col = !show_col)}\n\t\t\t/>\n\t\t\t{#if show_col}\n\t\t\t\t<input aria-label=\"Brush color\" bind:value={brush_color} type=\"color\" />\n\t\t\t{/if}\n\t\t</span>\n\t{/if}\n</div>\n\n<style>\n\t.wrap {\n\t\tdisplay: flex;\n\t\tposition: absolute;\n\t\ttop: var(--size-10);\n\t\tright: var(--size-2);\n\t\tflex-direction: column;\n\t\tjustify-content: flex-end;\n\t\tgap: var(--spacing-sm);\n\t\tz-index: var(--layer-5);\n\t}\n\t.brush {\n\t\ttop: 0;\n\t\tright: 0;\n\t}\n\n\t.brush input {\n\t\tposition: absolute;\n\t\ttop: 3px;\n\t\tright: calc(100% + 5px);\n\t}\n\n\t.col input {\n\t\tposition: absolute;\n\t\tright: calc(100% + 5px);\n\t\tbottom: -4px;\n\t}\n</style>\n","<script lang=\"ts\">\n\t// @ts-nocheck\n\timport { createEventDispatcher, tick, onMount } from \"svelte\";\n\timport { BlockLabel } from \"@gradio/atoms\";\n\timport { Image, Sketch as SketchIcon } from \"@gradio/icons\";\n\timport type { SelectData } from \"@gradio/utils\";\n\timport { get_coordinates_of_clicked_image } from \"../shared/utils\";\n\n\timport Cropper from \"./Cropper.svelte\";\n\timport Sketch from \"./Sketch.svelte\";\n\timport Webcam from \"./Webcam.svelte\";\n\timport ModifySketch from \"./ModifySketch.svelte\";\n\timport SketchSettings from \"./SketchSettings.svelte\";\n\n\timport { Upload, ModifyUpload } from \"@gradio/upload\";\n\n\texport let value:\n\t\t| null\n\t\t| string\n\t\t| { image: string | null; mask: string | null };\n\texport let label: string | undefined = undefined;\n\texport let show_label: boolean;\n\n\texport let source: \"canvas\" | \"webcam\" | \"upload\" = \"upload\";\n\texport let tool: \"editor\" | \"select\" | \"sketch\" | \"color-sketch\" = \"editor\";\n\texport let shape: [number, number];\n\texport let streaming = false;\n\texport let pending = false;\n\texport let mirror_webcam: boolean;\n\texport let brush_radius: number;\n\texport let brush_color = \"#000000\";\n\texport let mask_opacity;\n\texport let selectable = false;\n\n\tlet sketch: Sketch;\n\tlet cropper: Cropper;\n\n\tif (\n\t\tvalue &&\n\t\t(source === \"upload\" || source === \"webcam\") &&\n\t\ttool === \"sketch\"\n\t) {\n\t\tvalue = { image: value as string, mask: null };\n\t}\n\n\tfunction handle_upload({ detail }: CustomEvent<string>): void {\n\t\tif (tool === \"color-sketch\") {\n\t\t\tstatic_image = detail;\n\t\t} else {\n\t\t\tvalue =\n\t\t\t\t(source === \"upload\" || source === \"webcam\") && tool === \"sketch\"\n\t\t\t\t\t? { image: detail, mask: null }\n\t\t\t\t\t: detail;\n\t\t}\n\t\tdispatch(\"upload\", detail);\n\t}\n\n\tfunction handle_clear({ detail }: CustomEvent<null>): void {\n\t\tvalue = null;\n\t\tstatic_image = undefined;\n\t\tdispatch(\"clear\");\n\t}\n\n\tasync function handle_save(\n\t\t{ detail }: { detail: string },\n\t\tinitial\n\t): Promise<void> {\n\t\tif (mode === \"mask\") {\n\t\t\tif (source === \"webcam\" && initial) {\n\t\t\t\tvalue = {\n\t\t\t\t\timage: detail,\n\t\t\t\t\tmask: null\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tvalue = {\n\t\t\t\t\timage: typeof value === \"string\" ? value : value?.image || null,\n\t\t\t\t\tmask: detail\n\t\t\t\t};\n\t\t\t}\n\t\t} else if (\n\t\t\t(source === \"upload\" || source === \"webcam\") &&\n\t\t\ttool === \"sketch\"\n\t\t) {\n\t\t\tvalue = { image: detail, mask: null };\n\t\t} else {\n\t\t\tvalue = detail;\n\t\t}\n\n\t\tawait tick();\n\n\t\tdispatch(streaming ? \"stream\" : \"edit\");\n\t}\n\n\tconst dispatch = createEventDispatcher<{\n\t\tchange: string | null;\n\t\tstream: string | null;\n\t\tedit: undefined;\n\t\tclear: undefined;\n\t\tdrag: boolean;\n\t\tupload: FileData;\n\t\tselect: SelectData;\n\t}>();\n\n\tlet dragging = false;\n\n\t$: dispatch(\"drag\", dragging);\n\n\tfunction handle_image_load(event: Event): void {\n\t\tconst element = event.currentTarget as HTMLImageElement;\n\t\timg_width = element.naturalWidth;\n\t\timg_height = element.naturalHeight;\n\t\tcontainer_height = element.getBoundingClientRect().height;\n\t}\n\n\tasync function handle_sketch_clear(): Promise<void> {\n\t\tsketch.clear();\n\t\tawait tick();\n\t\tvalue = null;\n\t\tstatic_image = undefined;\n\t}\n\n\tasync function handle_mask_clear(): Promise<void> {\n\t\tsketch.clear_mask();\n\t\tawait tick();\n\t}\n\n\tlet img_height = 0;\n\tlet img_width = 0;\n\tlet container_height = 0;\n\n\tlet mode;\n\n\t$: {\n\t\tif (source === \"canvas\" && tool === \"sketch\") {\n\t\t\tmode = \"bw-sketch\";\n\t\t} else if (tool === \"color-sketch\") {\n\t\t\tmode = \"color-sketch\";\n\t\t} else if (\n\t\t\t(source === \"upload\" || source === \"webcam\") &&\n\t\t\ttool === \"sketch\"\n\t\t) {\n\t\t\tmode = \"mask\";\n\t\t} else {\n\t\t\tmode = \"editor\";\n\t\t}\n\t}\n\tlet value_img;\n\tlet max_height;\n\tlet max_width;\n\n\tlet static_image = undefined;\n\n\t$: {\n\t\tif (value === null || (value.image === null && value.mask === null)) {\n\t\t\tstatic_image = undefined;\n\t\t}\n\t}\n\n\t$: {\n\t\tif (cropper) {\n\t\t\tif (value) {\n\t\t\t\tcropper.image = value;\n\t\t\t\tcropper.create();\n\t\t\t} else {\n\t\t\t\tcropper.destroy();\n\t\t\t}\n\t\t}\n\t}\n\n\tonMount(async () => {\n\t\tif (tool === \"color-sketch\" && value && typeof value === \"string\") {\n\t\t\tstatic_image = value;\n\t\t\tawait tick();\n\t\t\thandle_image_load({ currentTarget: value_img });\n\t\t}\n\t});\n\n\tfunction handle_click(evt: MouseEvent): void {\n\t\tlet coordinates = get_coordinates_of_clicked_image(evt);\n\t\tif (coordinates) {\n\t\t\tdispatch(\"select\", { index: coordinates, value: null });\n\t\t}\n\t}\n</script>\n\n<BlockLabel\n\t{show_label}\n\tIcon={source === \"canvas\" ? SketchIcon : Image}\n\tlabel={label || (source === \"canvas\" ? \"Sketch\" : \"Image\")}\n/>\n\n<div\n\tdata-testid=\"image\"\n\tclass=\"image-container\"\n\tbind:offsetHeight={max_height}\n\tbind:offsetWidth={max_width}\n>\n\t{#if source === \"upload\"}\n\t\t<Upload\n\t\t\tbind:dragging\n\t\t\tfiletype=\"image/*\"\n\t\t\ton:load={handle_upload}\n\t\t\tinclude_file_metadata={false}\n\t\t\tdisable_click={!!value}\n\t\t>\n\t\t\t{#if (value === null && !static_image) || streaming}\n\t\t\t\t<slot />\n\t\t\t{:else if tool === \"select\"}\n\t\t\t\t<Cropper bind:this={cropper} image={value} on:crop={handle_save} />\n\t\t\t\t<ModifyUpload on:clear={(e) => (handle_clear(e), (tool = \"editor\"))} />\n\t\t\t{:else if tool === \"editor\"}\n\t\t\t\t<ModifyUpload\n\t\t\t\t\ton:edit={() => (tool = \"select\")}\n\t\t\t\t\ton:clear={handle_clear}\n\t\t\t\t\teditable\n\t\t\t\t/>\n\n\t\t\t\t<!-- TODO: fix-->\n\t\t\t\t<!-- svelte-ignore a11y-click-events-have-key-events -->\n\t\t\t\t<!-- svelte-ignore a11y-no-noninteractive-element-interactions-->\n\t\t\t\t<img\n\t\t\t\t\tsrc={value}\n\t\t\t\t\talt=\"\"\n\t\t\t\t\tclass:scale-x-[-1]={source === \"webcam\" && mirror_webcam}\n\t\t\t\t\tclass:selectable\n\t\t\t\t\ton:click={handle_click}\n\t\t\t\t/>\n\t\t\t{:else if (tool === \"sketch\" || tool === \"color-sketch\") && (value !== null || static_image)}\n\t\t\t\t{#key static_image}\n\t\t\t\t\t<img\n\t\t\t\t\t\tbind:this={value_img}\n\t\t\t\t\t\tclass=\"absolute-img\"\n\t\t\t\t\t\tsrc={static_image || value?.image || value}\n\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\ton:load={handle_image_load}\n\t\t\t\t\t\tclass:webcam={source === \"webcam\" && mirror_webcam}\n\t\t\t\t\t/>\n\t\t\t\t{/key}\n\t\t\t\t{#if img_width > 0}\n\t\t\t\t\t<Sketch\n\t\t\t\t\t\t{value}\n\t\t\t\t\t\tbind:this={sketch}\n\t\t\t\t\t\tbind:brush_radius\n\t\t\t\t\t\tbind:brush_color\n\t\t\t\t\t\t{mask_opacity}\n\t\t\t\t\t\ton:change={handle_save}\n\t\t\t\t\t\t{mode}\n\t\t\t\t\t\twidth={img_width || max_width}\n\t\t\t\t\t\theight={img_height || max_height}\n\t\t\t\t\t\tcontainer_height={container_height || max_height}\n\t\t\t\t\t\t{value_img}\n\t\t\t\t\t\t{source}\n\t\t\t\t\t\t{shape}\n\t\t\t\t\t/>\n\t\t\t\t\t<ModifySketch\n\t\t\t\t\t\tshow_eraser={value_img}\n\t\t\t\t\t\ton:undo={() => sketch.undo()}\n\t\t\t\t\t\ton:clear_mask={handle_mask_clear}\n\t\t\t\t\t\ton:remove_image={handle_sketch_clear}\n\t\t\t\t\t/>\n\t\t\t\t\t{#if tool === \"color-sketch\" || tool === \"sketch\"}\n\t\t\t\t\t\t<SketchSettings\n\t\t\t\t\t\t\tbind:brush_radius\n\t\t\t\t\t\t\tbind:brush_color\n\t\t\t\t\t\t\tcontainer_height={container_height || max_height}\n\t\t\t\t\t\t\timg_width={img_width || max_width}\n\t\t\t\t\t\t\timg_height={img_height || max_height}\n\t\t\t\t\t\t\t{mode}\n\t\t\t\t\t\t/>\n\t\t\t\t\t{/if}\n\t\t\t\t{/if}\n\t\t\t{:else}\n\t\t\t\t<!-- TODO: fix-->\n\t\t\t\t<!-- svelte-ignore a11y-click-events-have-key-events -->\n\t\t\t\t<!-- svelte-ignore a11y-no-noninteractive-element-interactions-->\n\t\t\t\t<img\n\t\t\t\t\tsrc={value.image || value}\n\t\t\t\t\talt=\"hello\"\n\t\t\t\t\tclass:webcam={source === \"webcam\" && mirror_webcam}\n\t\t\t\t\tclass:selectable\n\t\t\t\t\ton:click={handle_click}\n\t\t\t\t/>\n\t\t\t{/if}\n\t\t</Upload>\n\t{:else if source === \"canvas\"}\n\t\t<ModifySketch\n\t\t\ton:undo={() => sketch.undo()}\n\t\t\ton:remove_image={handle_sketch_clear}\n\t\t/>\n\t\t{#if tool === \"color-sketch\"}\n\t\t\t<SketchSettings\n\t\t\t\tbind:brush_radius\n\t\t\t\tbind:brush_color\n\t\t\t\tcontainer_height={container_height || max_height}\n\t\t\t\timg_width={img_width || max_width}\n\t\t\t\timg_height={img_height || max_height}\n\t\t\t/>\n\t\t{/if}\n\t\t<Sketch\n\t\t\t{value}\n\t\t\tbind:brush_radius\n\t\t\tbind:brush_color\n\t\t\tbind:this={sketch}\n\t\t\ton:change={handle_save}\n\t\t\ton:clear={handle_sketch_clear}\n\t\t\t{mode}\n\t\t\twidth={img_width || max_width}\n\t\t\theight={img_height || max_height}\n\t\t\tcontainer_height={container_height || max_height}\n\t\t\t{shape}\n\t\t/>\n\t{:else if (value === null && !static_image) || streaming}\n\t\t{#if source === \"webcam\" && !static_image}\n\t\t\t<Webcam\n\t\t\t\ton:capture={(e) =>\n\t\t\t\t\ttool === \"color-sketch\" ? handle_upload(e) : handle_save(e, true)}\n\t\t\t\ton:stream={handle_save}\n\t\t\t\ton:error\n\t\t\t\t{streaming}\n\t\t\t\t{pending}\n\t\t\t\t{mirror_webcam}\n\t\t\t/>\n\t\t{/if}\n\t{:else if tool === \"select\"}\n\t\t<Cropper bind:this={cropper} image={value} on:crop={handle_save} />\n\t\t<ModifyUpload on:clear={(e) => (handle_clear(e), (tool = \"editor\"))} />\n\t{:else if tool === \"editor\"}\n\t\t<ModifyUpload\n\t\t\ton:edit={() => (tool = \"select\")}\n\t\t\ton:clear={handle_clear}\n\t\t\teditable\n\t\t/>\n\n\t\t<!-- TODO: fix -->\n\t\t<!-- svelte-ignore a11y-click-events-have-key-events -->\n\t\t<!-- svelte-ignore a11y-no-noninteractive-element-interactions-->\n\n\t\t<img\n\t\t\tsrc={value}\n\t\t\talt=\"\"\n\t\t\tclass:selectable\n\t\t\tclass:webcam={source === \"webcam\" && mirror_webcam}\n\t\t\ton:click={handle_click}\n\t\t/>\n\t{:else if (tool === \"sketch\" || tool === \"color-sketch\") && (value !== null || static_image)}\n\t\t{#key static_image}\n\t\t\t<img\n\t\t\t\tbind:this={value_img}\n\t\t\t\tclass=\"absolute-img\"\n\t\t\t\tsrc={static_image || value?.image || value}\n\t\t\t\talt=\"\"\n\t\t\t\ton:load={handle_image_load}\n\t\t\t\tclass:webcam={source === \"webcam\" && mirror_webcam}\n\t\t\t/>\n\t\t{/key}\n\t\t{#if img_width > 0}\n\t\t\t<Sketch\n\t\t\t\t{value}\n\t\t\t\tbind:this={sketch}\n\t\t\t\tbind:brush_radius\n\t\t\t\tbind:brush_color\n\t\t\t\ton:change={handle_save}\n\t\t\t\t{mode}\n\t\t\t\twidth={img_width || max_width}\n\t\t\t\theight={img_height || max_height}\n\t\t\t\tcontainer_height={container_height || max_height}\n\t\t\t\t{value_img}\n\t\t\t\t{source}\n\t\t\t/>\n\t\t\t<ModifySketch\n\t\t\t\ton:undo={() => sketch.undo()}\n\t\t\t\ton:remove_image={handle_sketch_clear}\n\t\t\t/>\n\t\t\t{#if tool === \"color-sketch\" || tool === \"sketch\"}\n\t\t\t\t<SketchSettings\n\t\t\t\t\tbind:brush_radius\n\t\t\t\t\tbind:brush_color\n\t\t\t\t\tcontainer_height={container_height || max_height}\n\t\t\t\t\timg_width={img_width || max_width}\n\t\t\t\t\timg_height={img_height || max_height}\n\t\t\t\t\t{mode}\n\t\t\t\t/>\n\t\t\t{/if}\n\t\t{/if}\n\t{:else}\n\t\t<!-- TODO: fix -->\n\t\t<!-- svelte-ignore a11y-click-events-have-key-events -->\n\t\t<!-- svelte-ignore a11y-no-noninteractive-element-interactions-->\n\n\t\t<img\n\t\t\tsrc={value.image || value}\n\t\t\talt=\"\"\n\t\t\tclass:webcam={source === \"webcam\" && mirror_webcam}\n\t\t\tclass:selectable\n\t\t\ton:click={handle_click}\n\t\t/>\n\t{/if}\n</div>\n\n<style>\n\t.image-container,\n\timg {\n\t\twidth: var(--size-full);\n\t\theight: var(--size-full);\n\t}\n\timg {\n\t\tobject-fit: contain;\n\t}\n\n\t.selectable {\n\t\tcursor: crosshair;\n\t}\n\n\t.absolute-img {\n\t\tposition: absolute;\n\t\topacity: 0;\n\t}\n\n\t.webcam {\n\t\ttransform: scaleX(-1);\n\t}\n</style>\n","<svelte:options accessors={true} />\n\n<script lang=\"ts\">\n\timport { createEventDispatcher } from \"svelte\";\n\timport Image from \"./Image.svelte\";\n\n\timport { Block } from \"@gradio/atoms\";\n\timport { _ } from \"svelte-i18n\";\n\timport { StatusTracker } from \"@gradio/statustracker\";\n\timport type { LoadingStatus } from \"@gradio/statustracker/types\";\n\timport { UploadText } from \"@gradio/atoms\";\n\n\texport let elem_id = \"\";\n\texport let elem_classes: string[] = [];\n\texport let visible = true;\n\texport let value: null | string = null;\n\texport let source: \"canvas\" | \"webcam\" | \"upload\" = \"upload\";\n\texport let tool: \"editor\" | \"select\" | \"sketch\" | \"color-sketch\" = \"editor\";\n\texport let label: string;\n\texport let show_label: boolean;\n\texport let streaming: boolean;\n\texport let pending: boolean;\n\texport let height: number | undefined;\n\texport let width: number | undefined;\n\texport let mirror_webcam: boolean;\n\texport let shape: [number, number];\n\texport let brush_radius: number;\n\texport let brush_color: string;\n\texport let mask_opacity: number;\n\texport let selectable = false;\n\texport let container = true;\n\texport let scale: number | null = null;\n\texport let min_width: number | undefined = undefined;\n\texport let loading_status: LoadingStatus;\n\n\tconst dispatch = createEventDispatcher<{\n\t\tchange: undefined;\n\t\terror: string;\n\t}>();\n\n\t$: value, dispatch(\"change\");\n\tlet dragging: boolean;\n\tconst FIXED_HEIGHT = 240;\n\n\t$: value = !value ? null : value;\n</script>\n\n<Block\n\t{visible}\n\tvariant={value === null && source === \"upload\" ? \"dashed\" : \"solid\"}\n\tborder_mode={dragging ? \"focus\" : \"base\"}\n\tpadding={false}\n\t{elem_id}\n\t{elem_classes}\n\theight={height || (source === \"webcam\" ? undefined : FIXED_HEIGHT)}\n\t{width}\n\tallow_overflow={false}\n\t{container}\n\t{scale}\n\t{min_width}\n>\n\t<StatusTracker {...loading_status} />\n\n\t<Image\n\t\t{brush_radius}\n\t\t{brush_color}\n\t\t{shape}\n\t\tbind:value\n\t\t{source}\n\t\t{tool}\n\t\t{selectable}\n\t\t{mask_opacity}\n\t\ton:edit\n\t\ton:clear\n\t\ton:stream\n\t\ton:drag={({ detail }) => (dragging = detail)}\n\t\ton:upload\n\t\ton:select\n\t\ton:share\n\t\ton:error={({ detail }) => {\n\t\t\tloading_status = loading_status || {};\n\t\t\tloading_status.status = \"error\";\n\t\t\tdispatch(\"error\", detail);\n\t\t}}\n\t\t{label}\n\t\t{show_label}\n\t\t{pending}\n\t\t{streaming}\n\t\t{mirror_webcam}\n\t>\n\t\t<UploadText type=\"image\" />\n\t</Image>\n</Block>\n","<svelte:options accessors={true} />\n\n<script lang=\"ts\">\n\timport Static from \"./static\";\n\timport Interactive from \"./interactive\";\n\n\timport { createEventDispatcher } from \"svelte\";\n\timport StaticImage from \"./static\";\n\timport Image from \"./interactive\";\n\n\timport { Block } from \"@gradio/atoms\";\n\timport { _ } from \"svelte-i18n\";\n\timport { StatusTracker } from \"@gradio/statustracker\";\n\timport type { LoadingStatus } from \"@gradio/statustracker/types\";\n\timport { UploadText } from \"@gradio/atoms\";\n\n\texport let elem_id = \"\";\n\texport let elem_classes: string[] = [];\n\texport let visible = true;\n\texport let value: null | string = null;\n\texport let source: \"canvas\" | \"webcam\" | \"upload\" = \"upload\";\n\texport let tool: \"editor\" | \"select\" | \"sketch\" | \"color-sketch\" = \"editor\";\n\texport let label: string;\n\texport let show_label: boolean;\n\texport let show_download_button: boolean;\n\texport let streaming: boolean;\n\texport let pending: boolean;\n\texport let height: number | undefined;\n\texport let width: number | undefined;\n\texport let mirror_webcam: boolean;\n\texport let shape: [number, number];\n\texport let brush_radius: number;\n\texport let brush_color: string;\n\texport let mask_opacity: number;\n\texport let selectable = false;\n\texport let container = true;\n\texport let scale: number | null = null;\n\texport let min_width: number | undefined = undefined;\n\texport let loading_status: LoadingStatus;\n\texport let mode: \"static\" | \"dynamic\";\n\texport let show_share_button = false;\n\n\tconst dispatch = createEventDispatcher<{\n\t\tchange: undefined;\n\t\terror: string;\n\t}>();\n\n\t$: value, dispatch(\"change\");\n\tlet dragging: boolean;\n\tconst FIXED_HEIGHT = 240;\n\n\t$: value = !value ? null : value;\n</script>\n\n<!-- \n<Block\n\t{visible}\n\tvariant={mode === \"dynamic\" && value === null && source === \"upload\"\n\t\t? \"dashed\"\n\t\t: \"solid\"}\n\tborder_mode={dragging ? \"focus\" : \"base\"}\n\tpadding={false}\n\t{elem_id}\n\t{elem_classes}\n\theight={height ||\n\t\t(source === \"webcam\" || mode === \"static\" ? undefined : FIXED_HEIGHT)}\n\t{width}\n\tallow_overflow={false}\n\t{container}\n\t{scale}\n\t{min_width}\n>\n\t<StatusTracker {...loading_status} />\n\t{#if mode === \"static\"}\n\t\t<StaticImage\n\t\t\ton:select\n\t\t\ton:share\n\t\t\ton:error\n\t\t\t{value}\n\t\t\t{label}\n\t\t\t{show_label}\n\t\t\t{show_download_button}\n\t\t\t{selectable}\n\t\t\t{show_share_button}\n\t\t/>\n\t{:else}\n\t\t<Image\n\t\t\t{brush_radius}\n\t\t\t{brush_color}\n\t\t\t{shape}\n\t\t\tbind:value\n\t\t\t{source}\n\t\t\t{tool}\n\t\t\t{selectable}\n\t\t\t{mask_opacity}\n\t\t\ton:edit\n\t\t\ton:clear\n\t\t\ton:stream\n\t\t\ton:drag={({ detail }) => (dragging = detail)}\n\t\t\ton:upload\n\t\t\ton:select\n\t\t\ton:share\n\t\t\ton:error={({ detail }) => {\n\t\t\t\tloading_status = loading_status || {};\n\t\t\t\tloading_status.status = \"error\";\n\t\t\t\tdispatch(\"error\", detail);\n\t\t\t}}\n\t\t\t{label}\n\t\t\t{show_label}\n\t\t\t{pending}\n\t\t\t{streaming}\n\t\t\t{mirror_webcam}\n\t\t>\n\t\t\t<UploadText type=\"image\" />\n\t\t</Image>\n\t{/if}\n</Block> -->\n\n{#if mode === \"static\"}\n\t<Static\n\t\tbind:value\n\t\t{elem_id}\n\t\t{elem_classes}\n\t\t{visible}\n\t\t{label}\n\t\t{show_label}\n\t\t{show_download_button}\n\t\t{height}\n\t\t{width}\n\t\t{selectable}\n\t\t{container}\n\t\t{scale}\n\t\t{min_width}\n\t\t{loading_status}\n\t\t{show_share_button}\n\t\ton:edit\n\t\ton:clear\n\t\ton:stream\n\t\ton:upload\n\t\ton:select\n\t\ton:share\n\t\ton:error\n\t></Static>\n{:else}\n\t<Interactive\n\t\tbind:value\n\t\t{elem_id}\n\t\t{elem_classes}\n\t\t{visible}\n\t\t{source}\n\t\t{tool}\n\t\t{label}\n\t\t{show_label}\n\t\t{streaming}\n\t\t{pending}\n\t\t{height}\n\t\t{width}\n\t\t{mirror_webcam}\n\t\t{shape}\n\t\t{brush_radius}\n\t\t{brush_color}\n\t\t{mask_opacity}\n\t\t{selectable}\n\t\t{container}\n\t\t{scale}\n\t\t{min_width}\n\t\t{loading_status}\n\t\ton:edit\n\t\ton:clear\n\t\ton:stream\n\t\ton:upload\n\t\ton:select\n\t\ton:share\n\t\ton:error\n\t></Interactive>\n{/if}\n","export { default as Component } from \"@gradio/image\";\nexport { default as ExampleComponent } from \"@gradio/image/example\";\nexport const modes = [\"static\", \"dynamic\"];\n"],"names":["insert","target","svg","anchor","append","path0","path1","circle0","circle1","circle2","circle3","circle4","path","get_coordinates_of_clicked_image","evt","image","imageRect","xScale","yScale","displayed_height","y_offset","x","y","displayed_width","x_offset","ctx","create_if_block_2","create_if_block_1","attr","img","img_src_value","div","Download","a","Image","dirty","blocklabel_changes","value","$$props","label","show_label","show_download_button","selectable","show_share_button","dispatch","createEventDispatcher","handle_click","coordinates","uploadToHuggingFace","block_changes","elem_id","elem_classes","visible","height","width","container","scale","min_width","loading_status","dragging","el","cropper","destroy","create","Cropper","image_data","$$value","Point","LazyPoint","point","angle","distance","angleRotated","diff","RADIUS_DEFAULT","LazyBrush","radius","enabled","initialPoint","newPointerPoint","both","div_transition","create_bidirectional_transition","fade","canvas_1","listen","if_block","create_if_block","i","catenary_color","mid_point","p1","p2","value_img","mode","brush_color","brush_radius","mask_opacity","source","container_height","shape","mounted","canvas_width","canvas_height","last_value_img","canvas_types","canvas","points","lines","mouse_has_moved","values_changed","is_drawing","is_pressing","lazy","canvas_container","canvas_observer","line_count","draw_cropped_image","_width","_height","shape_ratio","image_ratio","onMount","key","tick","_","trigger_on_change","draw_lines","$$invalidate","ResizeObserver","entries","observer","rest","handle_canvas_resize","loop","init","clear","initX","initY","onDestroy","redraw_image","_lines","clear_canvas","clear_mask","undo","line","_points","draw_points","saveLine","save_mask_line","handle_draw_start","e","get_pointer_pos","handle_pointer_move","handle_draw_move","handle_draw_end","old_width","old_height","old_container_height","add_lr_border","container_ratio","dimensions","container_dimensions","set_canvas_size","dpr","rect","clientX","clientY","is_disabled","mask","target_ctx","len","midPoint","get_image_data","once","pointer","brush","draw_interface","brush_dot","name","Erase","Undo","Clear","show_eraser","click_handler","event","input","Color","span","Brush","if_block1","show_size","show_col","img_width","img_height","to_number","click_handler_1","create_if_block_14","create_if_block_10","create_if_block_8","sketch_1_changes","src_url_equal","create_if_block_15","sketchsettings_changes","create_if_block_5","create_if_block_6","SketchIcon","tool","streaming","pending","mirror_webcam","sketch","handle_upload","detail","static_image","handle_clear","handle_save","initial","handle_image_load","element","handle_sketch_clear","handle_mask_clear","max_height","max_width","clear_handler","edit_handler","undo_handler","undo_handler_1","clear_handler_1","edit_handler_1","undo_handler_2","FIXED_HEIGHT","modes"],"mappings":"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","x_google_ignoreList":[8,9,10]}